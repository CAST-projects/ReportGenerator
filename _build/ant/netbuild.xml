<?xml version="1.0" encoding="utf-8"?>

<project name="netbuild" basedir=".">

    <!-- Local properties -->
	<property environment="env" />
	<property name="wksp.dir"       value="${env.WORKSPACE}" />
    <property name="EXT_TOOLS32" value="\\productfs01\EngTools\external_tools\win32" />
	<property name="ENGTOOLS"    value="\\productfs01\EngTools" />

	<property name="Setup" value="${wksp.dir}/ReportGenerator/Setup/ReportGeneratorSetup.exe" />

	<path id="tasks.classpath">
		<pathelement location="${wksp.dir}/ReportGenerator/_build/ant/lib/ant-contrib.jar"/>
	</path>	

	<!-- pour Ant-Contrib : for -->
	<taskdef resource="net/sf/antcontrib/antlib.xml" onerror="failall" loaderref="tasks.classloader" classpathref="tasks.classpath" />

	<macrodef name="castSignFile">
		<attribute name="file" description="file to sign" />
		<sequential>
			<if><not><equals arg1="Inc" arg2="${BUILDNO}"/></not>
				<then>
					<exec executable="${EXT_TOOLS32}/signtool.exe" failonerror="true">
						<arg value="sign"/>
						<arg value="/f"/>
						<arg value="${ENGTOOLS}/certificates/certif_02_09_2021.pfx"/>
						<arg value="/t"/>
						<arg value="http://timestamp.verisign.com/scripts/timstamp.dll"/>
						<arg value="/p"/>
						<arg value="castcast"/>
						<arg value="@{file}"/>
					</exec>
					<exec executable="${EXT_TOOLS32}/signtool.exe" failonerror="true">
						<arg value="verify"/>
						<arg value="/pa"/>
						<arg value="@{file}"/>
					</exec>
				</then>
			</if>  
		</sequential>
	</macrodef>
	
	<macrodef name="setJobUnstable">
		<attribute name="cause" default="Undefined cause..."/>
		<sequential>
			<echo>Build unstability: @{cause}</echo>
		</sequential>
	</macrodef>
	
	<target name="buildInnoSetup">
    <!-- build the setup -->    
		<trycatch>
			<try>
				<exec executable="${wksp.dir}/InnoSetup5/ISCC.exe" dir="${wksp.dir}/ReportGenerator/">
				  <arg value="${wksp.dir}/ReportGenerator/Setup/setup.iss"/>
				</exec>
			</try>
			<catch>
				<setJobUnstable cause="Fail to build new Setup!"/>
			</catch>
		</trycatch>
	</target>
	
	<target name="signSetup">
		<trycatch>

			<try>
				<castSignFile file="${Setup}" />
			</try>
			<catch>
				<setJobUnstable cause="Fail to sign new Setup!"/>
			</catch>
		</trycatch>
	</target>
	
	<target name="buildPackage">
		<property name="rg.dir" value="${wksp.dir}/ReportGenerator"/>
		<property name="reporting.dir" value="${rg.dir}/CastReporting.Reporting.Core"/>
		<property name="console.dir" value="${rg.dir}/CastReporting.Console.Core/bin/Release/netcoreapp2.2"/>
	
		<!-- create a dir for the package -->
		<mkdir dir="${wksp.dir}/flat"/>
		<!-- put the needed dll and files from release build -->
		<copy todir="${wksp.dir}/flat">
			<fileset dir="${console.dir}">
				<include name="*.dll"/>
				<include name="*/*.dll"/>
				<include name="*.config"/>
				<include name="CastReporting.Console.Core.runtimeconfig.json"/>
				<include name="CastReporting.Console.Core.deps.json"/>
				<include name="Parameters/Parameters.xml"/>
			</fileset>
		</copy>
		<!-- create the log folder -->
		<mkdir dir="${wksp.dir}/flat/Logs"/>
		<!-- put the templates in the right places -->
		<mkdir dir="${wksp.dir}/flat/Templates"/>
		<copy todir="${wksp.dir}/flat/Templates">
			<fileset dir="${reporting.dir}/TemplatesFiles"/>
		</copy>
		<mkdir dir="${wksp.dir}/flat/Templates/Portfolio"/>
		<copy todir="${wksp.dir}/flat/Templates/Portfolio">
			<fileset dir="${reporting.dir}/PortfolioTemplatesFiles"/>
		</copy>
		<!-- copy the settings file -->
		<copy todir="${wksp.dir}/flat">
			<fileset dir="${rg.dir}/CastReporting.Repositories.Core">
				<include name="CastReportingSetting.xml"/>
			</fileset>
		</copy> 
		<!-- copy the license -->
		<copy todir="${wksp.dir}/flat">
			<fileset dir="${rg.dir}/Setup">
				<include name="License.rtf"/>
			</fileset>
		</copy>
		<!-- zip the package -->
		<zip destfile="${wksp.dir}/ReportGeneratorCLIforAllOS.zip" defaultexcludes="yes" encoding="UTF-8">
			<zipfileset dir="${wksp.dir}/flat" encoding="CESU-8" includes="**/*"/>
			<!--zipfileset dir="${rg.dir}/_build" includes="*.sh" filemode="700" /-->
		</zip>
	</target>
</project>
